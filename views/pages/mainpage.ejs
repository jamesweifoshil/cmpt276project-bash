 
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <% include ../partials/header.ejs %>
    <% include ../partials/nav-out.ejs %>
    <link rel="stylesheet" href="../../public/stylesheets/xterm.css" />
    <script src="../../public/script/xterm.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
            crossorigin="anonymous">
    </script>
    <script type="text/javascript" src="/script/FileSaver.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/xterm/3.14.5/xterm.min.css" />
		<script src="https://cdnjs.cloudflare.com/ajax/libs/xterm/3.14.5/xterm.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xterm/3.14.5/addons/attach/attach.js"></script>
    <script src="../../public/script/AceTextEditor.js"></script>
    <script src="/socket.io/socket.io.js"></script>


    <!-- <link rel="stylesheet" href="/public/stylesheets/mainPage.css"> -->
    <style type="text/css" media="screen">
      #editor { 
          position: absolute;
          height:600px;
          top: 2%;
          right: 2%;
          bottom: 2%;
          left: 2%;
          margin-top: 860px;
      }
    </style>
    <style>
      h3 {
        color:darkred;
      }
      body {
        font-family: helvetica, sans-serif, arial;
        font-size: 1em;
        color: #111;
      }
      h1 {
        text-align: center;
      }
      #terminal-container {
        width: 1850px;
        height: 450px;
        margin: 0 auto;
        padding: 2px;
      }
      #terminal-container .terminal {
        background-color: #111;
        color: #fafafa;
        padding: 2px;
      }
      #terminal-container .terminal:focus .terminal-cursor {
        background-color: #fafafa;
      }
    </style>
  </head>
  <body>
    <% if (user.role === 'admin') { %>
      <h1>You are in Administrator view</h1>
    <% }else { %>
      <h1>Hello user <%=user.username%> </h1>
    <% } %>
    <!-- Ace text-editor package: https://ace.c9.io/#nav=about -->
    <div id="editor" class="pull-left">function foo(items) {
        var x = "All this is syntax highlighted";
        return x;
    }</div>
      

    <!-- Theme CDNs for ACE text editor  -->
    <script src="https://ajaxorg.github.io/ace-builds/src/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://ajaxorg.github.io/ace-builds/src/ext-modelist.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/ace.min.js" crossorigin="anonymous" integrity="sha256-T5QdmsCQO5z8tBAXMrCZ4f3RX8wVdiA0Fu17FGnU1vU=" ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/theme-monokai.min.js" crossorigin="anonymous"  ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/snippets/c_cpp.min.js" crossorigin="anonymous"  ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/mode-c_cpp.min.js" crossorigin="anonymous"  ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/worker-javascript.min.js" crossorigin="anonymous"  ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/snippets/javascript.min.js" crossorigin="anonymous"  ></script>
    <script src="https://pagecdn.io/lib/ace/1.4.12/mode-javascript.min.js" crossorigin="anonymous"  ></script>  
  
  <!-- <script src="/src-noconflict/ace.js" type="text/javascript" charset="utf-8"></script> -->

     <h3>Terminal</h3>
     
     <ul>
       <h4>Upload file to server to compile and execute:</h4>
       <form action="/terminal" method="post" enctype="multipart/form-data">
        <input class="btn btn-sm btn-warning" type="file" name="terminalFile">
        <input class="btn btn-sm btn-success" type="submit" value="Submit" > 
      </form> 
     </ul>
    
     <div id="terminal-container"></div>
     <div><h3>Text editor</h3></div>
     
     <ul>
      <p><h4>Upload file to text editor:</h4></p>
      <input class="btn btn-sm btn-warning" type="file" id="openbtn" onchange="openCode(this.files)" value="Open">
       <p><h4>Choose Syntax Highlighting:</h4>  
        <select class="bg-success" name="textEditorHighlighting" id="textEditorHighlighting" onchange="setSynataxHighlighting()">
        <option value="ace/mode/javascript">Javascript</option>
        <option value="ace/mode/c_cpp">C/CPP</option>
        <option value="ace/mode/python">Python</option>
       </select>
      </p>
       <p><h4>Save As:</h4>
        <input class="bg-info" type="text" name="editorFileName" id="editorFileName" placeholder="File Name">
        <select class="bg-info" name="editorFileExtension" id="editorFileExtension">
         <option value=".js">Javascript</option>
         <option value=".c">C</option>
         <option value=".cpp">C++</option>
         <option value=".h">C/C++ Header File</option>
         <option value=".py">Python</option>
         <input class="btn btn-sm btn-info" type="button" value="Save" onclick="onWriteClick()"/>
        </select>
       </p>
     </ul>



  
  <script>
    var term = new Terminal({
      cursorBlink: "block"
    });

    wsURL = ((window.location.protocol === "https:") ? "wss://" : "ws://") + window.location.host;
    const ws = new WebSocket(wsURL);
    ws.onmessage = msg => {
      console.log(msg.data);
      var output = msg.data.split("\n")
      for (var x=0; x<output.length; x++ ){
        term.write(output[x]+"\r\n");
      }
      term.write("$ ");
      curr_line = "";
    };

    term.open(document.getElementById('terminal'));
    term.write('Hello from \x1B[1;3;31mBash From Anywhere\x1B[0m $ ')
    var curr_line="";
    term.onKey(function(evt) {
      //Enter
      if (evt.domEvent.which === 13) {
        if (curr_line) {
          term.write("\r\n");
          ws.send(curr_line);
          curr_line = "";
        }
      } else if (evt.domEvent.which === 8) {
        // Backspace
        if (curr_line) {
          curr_line = curr_line.slice(0, curr_line.length - 1);
          term.write("\b \b");
        }
      } else {
        curr_line += evt.key;
        term.write(evt.key);
      }
    });

    //Text editor JS:
    var editor = ace.edit("editor", {
    theme: "ace/theme/monokai",
    mode: "ace/mode/javascript",
    placeholder: "choose file to edit"
}); 

function openCode(files) {
  var file = files[0];
  if (!file) return;
  var modelist = ace.require("ace/ext/modelist")
  var modeName = modelist.getModeForPath(file.name).mode 
  editor.session.setMode(modeName)
  reader = new FileReader();
  reader.onload = function() {
    editor.session.setValue(reader.result)
  }  
  reader.readAsText(file) 
}

function setSynataxHighlighting() {
editor.session.setMode(document.getElementById('textEditorHighlighting').value);
}


$(function() {
});

function writeFileUsingFileSaver() {
  var myArray = editor.session.getDocument().$lines;
  myArray.forEach(element => {
    element = element.replace(/([^\r])\n/g, "");
  });

  for(var i = 1; i < myArray.length; i+=2) {
    myArray.splice(i,0,'\n');
  }

var blob = new Blob(myArray);
// var blob = new Blob(myArray, {type:'javascript',endings:'native'});
var editorFileName = document.getElementById('editorFileName').value;
var editorFileExtension = document.getElementById('editorFileName').value;
window.saveAs(blob, document.getElementById('editorFileName').value + document.getElementById('editorFileExtension').value);
}

function onWriteClick() {
    writeFileUsingFileSaver();
}

  //Terminal
  window.addEventListener('load', function() {
        var terminalContainer = document.getElementById('terminal-container');
        var term = new Terminal({ cursorBlink: true });
        term.open(terminalContainer);

        var socket = io.connect();
        
        socket.on('connect', function() {
          term.write('\r\n*** Connected to remote Linux server***\r\n');

          // Browser -> Backend
          term.on('data', function(data) {
            socket.emit('data', data);
          });

          // Backend -> Browser
          socket.on('data', function(data) {
            term.write(data);
          });

          socket.on('disconnect', function() {
            term.write('\r\n*** Disconnected from remote Linux server***\r\n');
          });
        });
      }, false);
</script>
  </body>
</html>

